# -*-ruby-*-

require 'erb'
require 'json'

namespace 'mydocs' do
  RDOC = FileList['*.erb'].sub(/\.erb$/, '.rdoc')

  # Return a list of plugins with description for each plugin.
  def plugins () 
    plugin_name_max = 20

    r = []
    r << format("%-#{plugin_name_max}s %s %s\n", 'NAME', 'VER', 'DESCRIPTION')
    Dir['../lib/bwkfanboy/plugins/*.rb'].map {|i| File.basename(i, '.rb')}.each {|i|
      p = `../bin/bwkfanboy -i #{i} q w e r t y`.split("\n")
      ver = p[0].split(':')[1..-1].join.strip
      desc = p[2].split(':')[1..-1].join.strip
      r << format("%-#{plugin_name_max}s %3s %s", i.strip, ver, desc)
    }
    r
  end

  rule '.rdoc' => ['.erb'] do |i|
    File.open(i.name, 'w+') {|fp|
      puts "#{i.source} > #{i.name}"
      fp.puts ERB.new(File.read(i.source)).result(binding)
    }
  end

  desc "Generate rdoc files"
  task :default => RDOC

  desc "Clean all rdoc's"
  task :clean do
    rm(RDOC, verbose: true, force: true)
  end

  desc "Print a list of plugins"
  task :plugins do
    plugins.each {|i| puts i }
  end

  desc "Print all staff that can be generated"
  task :print_gen do
    r = RDOC.to_a #.map {|i| File.basename(pwd) + '/' + i}
    puts r.to_json
  end
end
